<Project>
  <PropertyGroup>
    <!-- Language version and framework settings -->
    <LangVersion>preview</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>disable</ImplicitUsings>
    <!-- Build configuration settings -->
    <Configurations>Debug;Release;Experimental;Alpha;Beta;Preview</Configurations>
    
    <!-- Build settings -->
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);CS1591</NoWarn>
    
    <!-- Package settings -->
    <Authors>Fractal Team</Authors>
    <Company>Fractal</Company>
    <Copyright>Copyright Â© $(Company) $([System.DateTime]::Now.Year)</Copyright>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/CyberdineDevelopment/smart-generators</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    
    <!-- Symbol packages -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    
    <!-- Central Package Management -->
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    
    <!-- Nerdbank.GitVersioning -->
    <GitVersioningVersion>3.6.143</GitVersioningVersion>
  </PropertyGroup>

  <!-- Debug: Minimal checks for fast development -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>none</AnalysisLevel>
    <RunAnalyzers>false</RunAnalyzers>
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <!-- Treat analyzer warnings as warnings, not errors -->
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
  </PropertyGroup>
  
  <!-- Experimental: Minimal enforcement -->
  <PropertyGroup Condition="'$(Configuration)' == 'Experimental'">
    <DefineConstants>TRACE;EXPERIMENTAL</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>latest-minimum</AnalysisLevel>
    <RunAnalyzers>true</RunAnalyzers>
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <!-- Treat analyzer warnings as warnings, not errors -->
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    <ReportAnalyzer>true</ReportAnalyzer>
  </PropertyGroup>
  
  <!-- Alpha: Basic checks -->
  <PropertyGroup Condition="'$(Configuration)' == 'Alpha'">
    <DefineConstants>TRACE;ALPHA</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>latest-minimum</AnalysisLevel>
    <RunAnalyzers>true</RunAnalyzers>
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <!-- Treat analyzer warnings as warnings, not errors -->
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    <ReportAnalyzer>true</ReportAnalyzer>
  </PropertyGroup>
  
  <!-- Beta: Recommended checks, warnings as errors -->
  <PropertyGroup Condition="'$(Configuration)' == 'Beta'">
    <DefineConstants>TRACE;BETA</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
    <RunAnalyzers>true</RunAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>
  
  <!-- Preview: Strict checks -->
  <PropertyGroup Condition="'$(Configuration)' == 'Preview'">
    <DefineConstants>TRACE;PREVIEW</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
    <RunAnalyzers>true</RunAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>
  
  <!-- Release: Production ready -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <DefineConstants>TRACE;RELEASE</DefineConstants>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <WarningLevel>4</WarningLevel>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
    <RunAnalyzers>true</RunAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>

  <!-- Source Generator Projects -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('SmartGenerators')) And !$(MSBuildProjectName.Contains('Tests'))">
    <TargetFramework>netstandard2.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>
    <DevelopmentDependency>true</DevelopmentDependency>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <!-- Enable cross-assembly discovery for SmartGenerators -->
    <EnableCrossAssemblyDiscovery>true</EnableCrossAssemblyDiscovery>
    <!-- Include build output for runtime components -->
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <!-- Test projects -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('Tests'))">
    <TargetFramework>net10.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Nerdbank.GitVersioning -->
  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all" Condition="'$(IsTestProject)' != 'true'" />
  </ItemGroup>

  <!-- Source Link -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
  </ItemGroup>

  <!-- Include README in NuGet packages -->
  <ItemGroup Condition="'$(IsPackable)' == 'true' And Exists('$(MSBuildThisFileDirectory)README.md')">
    <None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Analyzers - Applied to all projects -->
  <ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <PackageReference Include="AsyncFixer" PrivateAssets="All" />
    <PackageReference Include="Meziantou.Analyzer" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" PrivateAssets="All" />
    <PackageReference Include="Roslynator.Analyzers" PrivateAssets="All" />
  </ItemGroup>
</Project>